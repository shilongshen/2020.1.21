#功能包配置文件，该文件是一个包含功能包信息的XML
文件，包括其名称，作者，许可证和依赖包。
<?xml version="1.0"?>#这是一个定义文档语法的语句，随后的内容表明在遵循xml版本1.0。
<package format="2">#从这个语句到最后</package>的部分是ROS功能包的配置部分。
  <name>multi-agents-formulation</name>#功能包的名称。使用创建功能包时输入的功能包名称。正如其他选项，用户可
以随时更改。
  <version>0.0.0</version>#功能包的版本。可以自由指定。
  <description>The multi-agents-formulation package</description>#功能包的简要说明。通常用两到三句话描述。

  <!-- One maintainer tag required, multiple allowed, one person per tag -->提供功能包管理者的姓名和电子邮件地址。
  <!-- Example:  -->
  <!-- <maintainer email="jane.doe@example.com">Jane Doe</maintainer> -->
  <maintainer email="zyq@todo.todo">zyq</maintainer>


  <!-- One license tag required, multiple allowed, one license per tag -->记录版权许可证。写BSD、MIT、Apache、GPLv3或LGPLv3即可。
  <!-- Commonly used license strings: -->
  <!--   BSD, MIT, Boost Software License, GPLv2, GPLv3, LGPLv2.1, LGPLv3 -->
  <license>TODO</license>


  <!-- Url tags are optional, but multiple are allowed, one per tag -->#记录描述功能包的说明，如网页、错误管理、存储库的地址等。根据功能包的
类型，用户可以填写网站、错误跟踪（bugtracker）或存储库的地址。
  <!-- Optional attribute type can be: website, bugtracker, or repository -->
  <!-- Example: -->
  <!-- <url type="website">http://wiki.ros.org/multi-agents-formulation</url> -->


  <!-- Author tags are optional, multiple are allowed, one per tag -->#记录参与功能包开发的开发人员的姓名和电子邮件地址。如果涉及多位开发人
员，只需在下一行添加<author>标签。
  <!-- Authors do not have to be maintainers, but could be -->
  <!-- Example: -->
  <!-- <author email="jane.doe@example.com">Jane Doe</author> -->


  <!-- The *depend tags are used to specify dependencies -->
  <!-- Dependencies can be catkin packages or system dependencies -->
  <!-- Examples: -->
  <!-- Use depend as a shortcut for packages that are both build and exec dependencies -->
  <!--   <depend>roscpp</depend> -->
  <!--   Note that this is equivalent to the following: -->
  <!--   <build_depend>roscpp</build_depend> -->#在编写功能包时写下您所依赖的功能包的名称。
  <!--   <exec_depend>roscpp</exec_depend> -->
  <!-- Use build_depend for packages you need at compile time: -->
  <!--   <build_depend>message_generation</build_depend> -->
  <!-- Use build_export_depend for packages you need in order to build against this package: -->
  <!--   <build_export_depend>message_generation</build_export_depend> -->
  <!-- Use buildtool_depend for build tool packages: -->
  <!--   <buildtool_depend>catkin</buildtool_depend> -->
  <!-- Use exec_depend for packages you need at runtime: -->
  <!--   <exec_depend>message_runtime</exec_depend> -->
  <!-- Use test_depend for packages you need only for testing: -->
  <!--   <test_depend>gtest</test_depend> -->#填写测试功能包时依赖的功能包名称。
  <!-- Use doc_depend for packages you need only for building documentation: -->
  <!--   <doc_depend>doxygen</doc_depend> -->
  <buildtool_depend>catkin</buildtool_depend>#描述构建系统的依赖关系。我们正在使用catkin 构建系统，因此输入catkin。
  <build_depend>roscpp</build_depend>
  <build_depend>rospy</build_depend>
  <build_depend>std_msgs</build_depend>
  <build_export_depend>roscpp</build_export_depend>
  <build_export_depend>rospy</build_export_depend>
  <build_export_depend>std_msgs</build_export_depend>
  <exec_depend>roscpp</exec_depend>
  <exec_depend>rospy</exec_depend>
  <exec_depend>std_msgs</exec_depend>


  <!-- The export tag contains other, unspecified, tags -->
  <export>
    <!-- Other tools can request additional information be placed here -->

  </export>
</package>
